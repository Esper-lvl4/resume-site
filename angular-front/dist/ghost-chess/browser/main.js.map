{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/ChessField.ts","./src/app/classes/Events.ts","./src/app/classes/RoomInfo.ts","./src/app/classes/Square.ts","./src/app/classes/UserInfo.ts","./src/app/classes/chess-figures/Bishop.ts","./src/app/classes/chess-figures/Figure.ts","./src/app/classes/chess-figures/King.ts","./src/app/classes/chess-figures/Knight.ts","./src/app/classes/chess-figures/Pawn.ts","./src/app/classes/chess-figures/Queen.ts","./src/app/classes/chess-figures/Rook.ts","./src/app/classes/chess-figures/index.ts","./src/app/common-components/default-button/default-button.component.ts","./src/app/common-components/default-button/default-button.component.html","./src/app/common-components/default-text-field/default-text-field.component.ts","./src/app/common-components/default-text-field/default-text-field.component.html","./src/app/components/chess-field-square/chess-field-square.component.ts","./src/app/components/chess-field-square/chess-field-square.component.html","./src/app/components/chess-field/chess-field.component.ts","./src/app/components/chess-field/chess-field.component.html","./src/app/components/chess-figure/chess-figure.component.ts","./src/app/components/chess-figure/chess-figure.component.html","./src/app/components/room-item/room-item.component.ts","./src/app/components/room-item/room-item.component.html","./src/app/components/room-list/room-list.component.ts","./src/app/components/room-list/room-list.component.html","./src/app/injectables/websocket.ts","./src/app/popups/default-popup/default-popup.component.ts","./src/app/popups/default-popup/default-popup.component.html","./src/app/popups/host-room-popup/host-room-popup.component.ts","./src/app/popups/host-room-popup/host-room-popup.component.html","./src/app/popups/name-set-popup/name-set-popup.component.ts","./src/app/popups/name-set-popup/name-set-popup.component.html","./src/app/popups/promote-popup/promote-popup.component.ts","./src/app/popups/promote-popup/promote-popup.component.html","./src/app/routes/game/game.component.ts","./src/app/routes/game/game.component.html","./src/app/routes/home/home.component.ts","./src/app/routes/home/home.component.html","./src/app/routes/lobby/lobby.component.ts","./src/app/routes/lobby/lobby.component.html","./src/app/routes/started-game/started-game.component.ts","./src/app/routes/started-game/started-game.component.html","./src/app/routes/wild-card/wild-card.component.ts","./src/app/routes/wild-card/wild-card.component.html","./src/app/websocket/connectWebsocket.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './routes/game/game.component';\nimport { HomeComponent } from './routes/home/home.component';\nimport { LobbyComponent } from './routes/lobby/lobby.component';\nimport { StartedGameComponent } from './routes/started-game/started-game.component';\nimport { WildCardComponent } from './routes/wild-card/wild-card.component';\n\nconst routes: Routes = [\n  {\n    path: 'game',\n    component: GameComponent,\n    children: [\n      { path: 'lobby', component: LobbyComponent },\n      { path: ':id', component: StartedGameComponent },\n    ],\n  },\n  { path: '', component: HomeComponent },\n  { path: '**', component: WildCardComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'ghost-chess';\n}\n","<div class=\"global-wrapper\">\n  <header class=\"header-wrapper\">\n    <a routerLink=\"/\" routerLinkActive=\"active\">Home</a>\n    <a routerLink=\"/game/lobby\" routerLinkActive=\"active\">Play</a>\n  </header>\n  <main class=\"main-wrapper\">\n    <router-outlet></router-outlet>\n  </main>\n  <footer class=\"footer-wrapper\">\n    <span>Created by Esper_lvl4</span>\n  </footer>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChessFieldComponent } from './components/chess-field/chess-field.component';\nimport { GameComponent } from './routes/game/game.component';\nimport { HomeComponent } from './routes/home/home.component';\nimport { WildCardComponent } from './routes/wild-card/wild-card.component';\nimport { ChessFieldSquareComponent } from './components/chess-field-square/chess-field-square.component';\nimport { ChessFigureComponent } from './components/chess-figure/chess-figure.component';\nimport { PromotePopupComponent } from './popups/promote-popup/promote-popup.component';\nimport { NameSetPopupComponent } from './popups/name-set-popup/name-set-popup.component';\nimport { FormsModule } from '@angular/forms';\nimport { DefaultPopupComponent } from './popups/default-popup/default-popup.component';\nimport { DefaultButtonComponent } from './common-components/default-button/default-button.component';\nimport { DefaultTextFieldComponent } from './common-components/default-text-field/default-text-field.component';\nimport { LobbyComponent } from './routes/lobby/lobby.component';\nimport { StartedGameComponent } from './routes/started-game/started-game.component';\nimport { RoomListComponent } from './components/room-list/room-list.component';\nimport { RoomItemComponent } from './components/room-item/room-item.component';\nimport { HostRoomPopupComponent } from './popups/host-room-popup/host-room-popup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChessFieldComponent,\n    GameComponent,\n    HomeComponent,\n    WildCardComponent,\n    ChessFieldSquareComponent,\n    ChessFigureComponent,\n    PromotePopupComponent,\n    NameSetPopupComponent,\n    DefaultPopupComponent,\n    DefaultButtonComponent,\n    DefaultTextFieldComponent,\n    LobbyComponent,\n    StartedGameComponent,\n    RoomListComponent,\n    RoomItemComponent,\n    HostRoomPopupComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { BishopFigure, KingFigure, KnightFigure, PawnFigure, QueenFigure, RookFigure } from \"src/app/classes/chess-figures\";\r\nimport { Figure } from \"src/app/classes/chess-figures/Figure\";\r\nimport { Events } from \"./Events\";\r\nimport { defaultLetters, Square } from \"./Square\";\r\n\r\nexport class ChessField extends Events {\r\n  squares: Square[] = [];\r\n  width: number = 8;\r\n  height: number = 8;\r\n  fieldLetters: string[] = [];\r\n  playerColor: 'white' | 'black' = 'white';\r\n\r\n  constructor(width?: number, height?: number) {\r\n    super();\r\n    if ((width && width > 8) || (height && height > 8)) {\r\n      throw new Error('Only 8 x 8 field or smaller is supported');\r\n    }\r\n    if (width) this.width = width;\r\n    if (height) this.height = height;\r\n    this.fieldLetters = defaultLetters.slice(0, width);\r\n  }\r\n\r\n  get promoteVariants(): Figure[] {\r\n    return this.playerColor === 'white' ? this.promoteVariantsWhite : this.promoteVariantsBlack;\r\n  }\r\n\r\n  get promoteVariantsWhite(): Figure[] {\r\n    return [\r\n      new QueenFigure('white'), new RookFigure('white'),\r\n      new BishopFigure('white'), new KnightFigure('white'),\r\n    ]\r\n  }\r\n\r\n  get promoteVariantsBlack(): Figure[] {\r\n    return [\r\n      new QueenFigure('black'), new RookFigure('black'),\r\n      new BishopFigure('black'), new KnightFigure('black'),\r\n    ]\r\n  }\r\n\r\n  generate(playerColor: 'black' | 'white'): Figure[] {\r\n    this.squares = [];\r\n    this.playerColor = playerColor;\r\n    const eventFigures: Figure[] = [];\r\n    let y = playerColor === 'white' ? this.height : 1;\r\n    let x = playerColor === 'white' ? 1 : this.width;\r\n    const checkOuterCondition = playerColor === 'white'\r\n      ? (y: number) => y >= 1\r\n      : (y: number) => y <= this.height;\r\n    const checkInnerCondition = playerColor === 'white'\r\n      ? (x: number) => x <= this.width\r\n      : (x: number) => x >= 1;\r\n    const outerIncrement = playerColor === 'white'\r\n      ? () => y--\r\n      : () => y++;\r\n    const innerIncrement = playerColor === 'white'\r\n      ? () => x++\r\n      : () => x--;\r\n    const resetX = playerColor === 'white' ? 1 : this.width;\r\n    \r\n    while(checkOuterCondition(y)) {\r\n      while (checkInnerCondition(x)) {\r\n        let figure: Square['figure'] = null;\r\n        if (y === 2 || y === 7) {\r\n          figure = new PawnFigure(y === 2 ? 'white' : 'black');\r\n          eventFigures.push(figure);\r\n        }\r\n        if (y === 1 || y === 8) {\r\n          const color = y === 1 ? 'white' : 'black';\r\n          if (x === 1 || x === 8) {\r\n            figure = new RookFigure(color);\r\n            eventFigures.push(figure);\r\n          }\r\n          if (x === 2 || x === 7) figure = new KnightFigure(color);\r\n          if (x === 3 || x === 6) figure = new BishopFigure(color);\r\n          if (x === 4) figure = new QueenFigure(color);\r\n          if (x === 5) {\r\n            figure = new KingFigure(color);\r\n            eventFigures.push(figure);\r\n          }\r\n        }\r\n        this.squares.push(new Square({\r\n          x: this.fieldLetters[x - 1],\r\n          y,\r\n          figure,\r\n          isBlack: x % 2 === y % 2,\r\n        }));\r\n        innerIncrement();\r\n      }\r\n      x = resetX;\r\n      outerIncrement();\r\n    }\r\n    return eventFigures;\r\n  }\r\n\r\n  findSquares(handler: (square: Square) => boolean): Square[] {\r\n    return this.squares.filter(handler);\r\n  }\r\n\r\n  findSquare(handler: (square: Square) => boolean): Square | undefined {\r\n    return this.squares.find(handler);\r\n  }\r\n\r\n  findSquareByCoordinates(x: string | number, y: number) {\r\n    return typeof x === 'string'\r\n      ? this.findSquare(square => {\r\n          const { xLetter, y: squareY } = square.coordinates;\r\n          return xLetter === x && squareY === y;\r\n        })\r\n      : this.findSquare(square => {\r\n          const { x: squareX, y: squareY } = square.coordinates;\r\n          return squareX === x && squareY === y;\r\n        });\r\n  }\r\n}","type EventHandler = (arg: any) => void;\r\n\r\nexport class Events {\r\n  handlers: { [key: string]: EventHandler[] } = {};\r\n\r\n  on(event: string, handler: EventHandler) {\r\n    if (!event || !handler) return;\r\n    if (!this.handlers[event]) this.handlers[event] = [];\r\n    this.handlers[event].push(handler);\r\n  }\r\n\r\n  once(event: string, handler: EventHandler) {\r\n    if (!event || !handler) return;\r\n    if (!this.handlers[event]) this.handlers[event] = [];\r\n    const onceDecorator = (arg: any) => {\r\n      handler(arg);\r\n      this.off(event, onceDecorator);\r\n    }\r\n    this.on(event, onceDecorator);\r\n  }\r\n\r\n  off(event: string, handler?: EventHandler) {\r\n    if (!event || !Array.isArray(this.handlers[event])) return;\r\n    if (!handler) {\r\n      this.handlers[event] = [];\r\n      return;\r\n    }\r\n    const index = this.handlers[event]\r\n      .findIndex(currentHandler => currentHandler === handler);\r\n    if (index === -1) return;\r\n    this.handlers[event].splice(index, 1);\r\n  }\r\n\r\n  emit(event: string, data?: any) {\r\n    if (!event || !Array.isArray(this.handlers[event])) return;\r\n    this.handlers[event].forEach(handler => {\r\n      handler(data);\r\n    });\r\n  }\r\n}","import { UserInfo } from \"./UserInfo\";\r\n\r\nexport interface RoomInfo {\r\n  id: number;\r\n  name: string;\r\n  players: UserInfo[];\r\n  gameNotation: string[];\r\n  gameHasStarted: boolean;\r\n  maxPlayers: number;\r\n  hostId: string;\r\n}\r\n\r\nexport function isRoomInfo(item: any): item is RoomInfo {\r\n  return item && typeof item === 'object'\r\n    && typeof item.id === 'number'\r\n    && typeof item.name === 'string'\r\n    && Array.isArray(item.players)\r\n    && Array.isArray(item.gameNotation)\r\n    && typeof item.gameHasStarted === 'boolean'\r\n    && typeof item.maxPlayers === 'number'\r\n    && typeof item.hostId === 'string';\r\n}\r\n\r\nexport default RoomInfo;","import { Figure } from \"src/app/classes/chess-figures/Figure\";\r\n\r\nexport const defaultLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n\r\nexport class Square {\r\n  coordinates: SquareCoordinates;\r\n  isBlack: boolean;\r\n  figure: Figure | null = null;\r\n  isPossibleMove: boolean = false;\r\n\r\n  constructor(info: { x: string, y: number, figure?: Figure | null, isBlack: boolean }) {\r\n    this.coordinates = new SquareCoordinates(info.x, info.y);\r\n    this.isBlack = info.isBlack;\r\n    if (info.figure) this.figure = info.figure;\r\n  }\r\n}\r\n\r\nexport class SquareCoordinates {\r\n  _x: string;\r\n  y: number;\r\n\r\n  constructor(x: string, y: number) {\r\n    this._x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  get x(): number {\r\n    return defaultLetters.indexOf(this._x) + 1;\r\n  }\r\n\r\n  get xLetter(): string  {\r\n    return this._x;\r\n  }\r\n}\r\n","export interface UserInfo {\r\n  id: string;\r\n  name: string;\r\n  color: 'white' | 'black';\r\n}\r\n\r\nexport function isUserInfo(item: any): item is UserInfo {\r\n  return item && typeof item === 'object'\r\n    && typeof item.id === 'string' && typeof item.name === 'string';\r\n}\r\n\r\nexport default UserInfo;","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class BishopFigure extends Figure {\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'Bishop',\r\n      nameLetter: 'B',\r\n      color,\r\n      weight: 3,\r\n      movement: new FigureMovement({\r\n        topLeft: Infinity,\r\n        topRight: Infinity,\r\n        bottomLeft: Infinity,\r\n        bottomRight: Infinity,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport default BishopFigure;","import { Events } from \"src/app/classes/Events\";\r\nimport { defaultLetters } from \"../Square\";\r\n\r\nexport class FigureMovement {\r\n  top: number = 0;\r\n  left: number = 0;\r\n  right: number = 0;\r\n  bottom: number = 0;\r\n  topLeft: number = 0;\r\n  topRight: number = 0;\r\n  bottomLeft: number = 0;\r\n  bottomRight: number = 0;\r\n  canCapture: boolean = true;\r\n\r\n  constructor(info: Partial<FigureMovement>) {\r\n    const {\r\n      top, left, right, bottom, topLeft, topRight, bottomLeft, bottomRight, canCapture\r\n    } = info;\r\n    if (top) this.top = top;\r\n    if (left) this.left = left;\r\n    if (right) this.right = right;\r\n    if (bottom) this.bottom = bottom;\r\n    if (topLeft) this.topLeft = topLeft;\r\n    if (topRight) this.topRight = topRight;\r\n    if (bottomLeft) this.bottomLeft = bottomLeft;\r\n    if (bottomRight) this.bottomRight = bottomRight;\r\n    if (typeof canCapture === 'boolean') this.canCapture = canCapture;\r\n  }\r\n\r\n  clone(): FigureMovement {\r\n    return new FigureMovement({\r\n      top: this.top,\r\n      left: this.left,\r\n      right: this.right,\r\n      bottom: this.bottom,\r\n      topLeft: this.topLeft,\r\n      topRight: this.topRight,\r\n      bottomLeft: this.bottomLeft,\r\n      bottomRight: this.bottomRight,\r\n      canCapture: this.canCapture,\r\n    });\r\n  }\r\n}\r\n\r\nexport interface CoordinatesMap {\r\n  [key: string]: { [y: string]: string };\r\n}\r\n\r\nexport class Figure extends Events {\r\n  name: string;\r\n  nameLetter: string = '';\r\n  color: 'white' | 'black' = 'white';\r\n  image: string = '';\r\n  weight: number = 1;\r\n  movement: FigureMovement | FigureMovement[];\r\n  // prop for pieces that do not move in straight line, like knight.\r\n  mustChangeDirection: boolean = false;\r\n  // for pieces that can promote.\r\n  canPromote: boolean = false;\r\n  // for pieces that must travel foo distance when moving.\r\n  noStop: boolean = false;\r\n  // for king - to prevent it from moving or capturing pieces if he would be captured\r\n  // for it.\r\n  isCoward: boolean = false;\r\n  // for pieces that move move through other pieces without taking them. They still\r\n  // capture if they stop on the same square as other piece but cannot stop on the same\r\n  // squares as allied pieces.\r\n  ignoreCollision: boolean = false;\r\n  // for pieces that moves differently when the capture other pieces.\r\n  captureMovement?: FigureMovement;\r\n\r\n  didNotMove: boolean = true;\r\n\r\n  possibleMoves: CoordinatesMap = {};\r\n\r\n  constructor(info: {\r\n    name: Figure['name'],\r\n    movement: Figure['movement'],\r\n    nameLetter?: Figure['nameLetter'],\r\n    weight?: Figure['weight'],\r\n    color?: Figure['color'],\r\n    image?: Figure['image'],\r\n    mustChangeDirection?: Figure['mustChangeDirection'];\r\n    canPromote?: Figure['canPromote'];\r\n    noStop?: Figure['noStop'];\r\n    isCoward?: Figure['isCoward'];\r\n    ignoreCollision?: Figure['ignoreCollision'];\r\n    captureMovement?: Figure['captureMovement'];\r\n  }) {\r\n    super();\r\n    this.name = info.name;\r\n    this.movement = info.movement;\r\n    if (info.color) this.color = info.color;\r\n    if (info.image) {\r\n      this.image = info.image;\r\n    } else {\r\n      this.image = `../assets/images/${this.color}-${this.name.toLowerCase()}.svg.png`;\r\n    }\r\n\r\n    if (typeof info.weight === 'number') this.weight = info.weight;\r\n    if (typeof info.mustChangeDirection === 'boolean') {\r\n      this.mustChangeDirection = info.mustChangeDirection;\r\n    }\r\n    if (typeof info.canPromote === 'boolean') this.canPromote = info.canPromote;\r\n    if (typeof info.noStop === 'boolean') this.noStop = info.noStop;\r\n    if (typeof info.ignoreCollision === 'boolean') {\r\n      this.ignoreCollision = info.ignoreCollision;\r\n    }\r\n    if (typeof info.isCoward === 'boolean') this.isCoward = info.isCoward;\r\n    if (typeof info.nameLetter === 'string') this.nameLetter = info.nameLetter;\r\n\r\n    if (info.captureMovement) this.captureMovement = info.captureMovement;\r\n  };\r\n\r\n  get numberOfMoves(): number {\r\n    return Array.isArray(this.movement) ? this.movement.length : 1;\r\n  }\r\n\r\n  getCurrentMovement(index: number): FigureMovement | undefined {\r\n    return Array.isArray(this.movement)\r\n      ? this.movement[index]\r\n      : (index === 0 ? this.movement : undefined);\r\n  }\r\n\r\n  setPossibleMove(x: number, y: number, direction: string) {\r\n    if (!this.possibleMoves[x]) this.possibleMoves[x] = {};\r\n    this.possibleMoves[x][y] = direction;\r\n  }\r\n\r\n  getPossibleMove(x: number, y: number): string | false {\r\n    return (this.possibleMoves[x] && this.possibleMoves[x][y]) || false;\r\n  }\r\n\r\n  moveIsPossible(x: string | number, y: number): boolean {\r\n    const targetX = typeof x === 'string'\r\n      ? defaultLetters.findIndex(letter => letter === x) + 1\r\n      : x;\r\n    if (targetX === 0) return false;\r\n    return !!(this.possibleMoves[targetX] && this.possibleMoves[targetX][y]);\r\n  }\r\n\r\n  clearPossibleMoves() {\r\n    this.possibleMoves = {};\r\n  }\r\n\r\n  clone(color: Figure['color']): Figure {\r\n    return new Figure({\r\n      name: this.name,\r\n      color: color || this.color,\r\n      image: this.image,\r\n      weight: this.weight,\r\n      mustChangeDirection: this.mustChangeDirection,\r\n      canPromote: this.canPromote,\r\n      noStop: this.noStop,\r\n      isCoward: this.isCoward,\r\n      ignoreCollision: this.ignoreCollision,\r\n      captureMovement: this.captureMovement?.clone(),\r\n      movement: Array.isArray(this.movement)\r\n        ? this.movement.map(move => move.clone())\r\n        : this.movement.clone(),\r\n    });\r\n  } \r\n}","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class KingFigure extends Figure {\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'King',\r\n      nameLetter: 'K',\r\n      color,\r\n      isCoward: true,\r\n      movement: new FigureMovement({\r\n        top: 1,\r\n        bottom: 1,\r\n        left: 1,\r\n        right: 1,\r\n        topLeft: 1,\r\n        topRight: 1,\r\n        bottomLeft: 1,\r\n        bottomRight: 1,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport default KingFigure;","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class KnightFigure extends Figure {\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'Knight',\r\n      nameLetter: 'N',\r\n      color,\r\n      weight: 3,\r\n      mustChangeDirection: true,\r\n      ignoreCollision: true,\r\n      noStop: true,\r\n      movement: [\r\n        new FigureMovement({\r\n          top: 2,\r\n          bottom: 2,\r\n          left: 2,\r\n          right: 2,\r\n        }),\r\n        new FigureMovement({\r\n          top: 1,\r\n          bottom: 1,\r\n          left: 1,\r\n          right: 1,\r\n        }),\r\n      ],\r\n    });\r\n  }\r\n}\r\n\r\nexport default KnightFigure;","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class PawnFigure extends Figure {\r\n  canCapturePawnInFront: boolean | 'left' | 'right' = false;\r\n\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'Pawn',\r\n      color,\r\n      canPromote: true,\r\n      movement: new FigureMovement({\r\n        top: color === 'white' ? 2 : 0,\r\n        bottom: color === 'black' ? 2 : 0,\r\n        right: 0,\r\n        left: 0,\r\n        canCapture: false,\r\n      }),\r\n      captureMovement: new FigureMovement({\r\n        topLeft: color === 'white' ? 1 : 0,\r\n        topRight: color === 'white' ? 1 : 0,\r\n        bottomLeft: color === 'black' ? 1 : 0,\r\n        bottomRight: color === 'black' ? 1 : 0,\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\nexport default PawnFigure;","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class QueenFigure extends Figure {\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'Queen',\r\n      nameLetter: 'Q',\r\n      color,\r\n      weight: 9,\r\n      movement: new FigureMovement({\r\n        top: Infinity,\r\n        bottom: Infinity,\r\n        left: Infinity,\r\n        right: Infinity,\r\n        topLeft: Infinity,\r\n        topRight: Infinity,\r\n        bottomLeft: Infinity,\r\n        bottomRight: Infinity,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport default QueenFigure;","import { Figure, FigureMovement } from \"./Figure\";\r\n\r\nexport class RookFigure extends Figure {\r\n  constructor(color: Figure['color']) {\r\n    super({\r\n      name: 'Rook',\r\n      nameLetter: 'R',\r\n      color,\r\n      weight: 5,\r\n      movement: new FigureMovement({\r\n        top: Infinity,\r\n        bottom: Infinity,\r\n        left: Infinity,\r\n        right: Infinity,\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport default RookFigure;","export * from './King';\r\nexport * from './Bishop';\r\nexport * from './Queen';\r\nexport * from './Knight';\r\nexport * from './Rook';\r\nexport * from './Pawn';","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-default-button',\n  templateUrl: './default-button.component.html',\n  styleUrls: ['./default-button.component.sass']\n})\nexport class DefaultButtonComponent {\n  @Input() disabled: boolean = false;\n\n  get isDisabled(): 'disabled' | undefined {\n    return this.disabled? 'disabled' : undefined;\n  }\n}","<button\n  [attr.disabled]=\"isDisabled\"\n  class=\"default-button\"\n>\n  <ng-content></ng-content>\n</button>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-default-text-field',\n  templateUrl: './default-text-field.component.html',\n  styleUrls: ['./default-text-field.component.sass']\n})\nexport class DefaultTextFieldComponent {\n\n  @Input() value: string = '';\n  @Output() valueChange = new EventEmitter<string>();\n\n  get localValue(): string {\n    return this.value;\n  }\n\n  set localValue(value) {\n    this.valueChange.emit(value);\n  }\n\n  constructor() { }\n\n}\n","<input\n  [(ngModel)]=\"localValue\"\n  class=\"default-text-field\"\n>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Figure } from 'src/app/classes/chess-figures/Figure';\nimport { Square, SquareCoordinates } from '../../classes/Square';\n\n@Component({\n  selector: 'app-chess-field-square',\n  templateUrl: './chess-field-square.component.html',\n  styleUrls: ['./chess-field-square.component.sass']\n})\nexport class ChessFieldSquareComponent implements OnInit {\n\n  @Input() square: Square | null = null;\n  @Input() playerColor: Figure['color'] = 'white';\n  @Input() width: number = 8;\n  @Input() height: number = 8;\n\n  @Output() grabFigure = new EventEmitter<Square | null>();\n  @Output() dropFigure = new EventEmitter<Square | null>();\n  @Output() clearPossibleMoves = new EventEmitter<never>();\n  @Output() targetSquareChange = new EventEmitter<Square | null>();\n  @Output() captureFigure = new EventEmitter<Square | null>();\n\n  get smallLetter(): string {\n    return this.playerColor === 'white'\n      ? (this.coordinates.y === 1 ? this.coordinates.xLetter : '')\n      : (this.coordinates.y === this.height ? this.coordinates.xLetter : '');\n  }\n\n  get smallNumber(): string {\n    return this.playerColor === 'white'\n      ? (this.coordinates.x === this.width ? this.coordinates.y + '' : '')\n      : (this.coordinates.x === 1 ? this.coordinates.y + '' : '');\n  }\n\n  get coordinates(): Square['coordinates'] {\n    return this.square?.coordinates || new SquareCoordinates('a', 1);\n  }\n\n  get isBlack(): Square['isBlack'] {\n    return this.square?.isBlack || false;\n  }\n\n  get figure(): Square['figure'] {\n    return this.square?.figure || null;\n  }\n\n  get isPossibleMove(): Square['isPossibleMove'] {\n    return this.square?.isPossibleMove || false;\n  }\n\n  constructor() { }\n\n  squareClick() {\n    if (this.square?.figure && !this.square?.isPossibleMove) {\n      this.grabFigure.emit(this.square);\n      return;\n    }\n\n    if (!this.square?.figure && this.square?.isPossibleMove) {\n      this.dropFigure.emit(this.square);\n      return;\n    }\n\n    if (this.square?.figure && this.square?.isPossibleMove) {\n      this.captureFigure.emit(this.square);\n    }\n\n    this.clearPossibleMoves.emit();\n  }\n\n  chooseFigure() {\n    this.grabFigure.emit(this.square);\n  }\n\n  unchooseFigure() {\n    this.dropFigure.emit(this.square);\n  }\n\n  changeTargetSquare() {\n    this.targetSquareChange.emit(this.square);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n  [class.is-black]=\"isBlack\"\n  class=\"chess-field-square\"\n  (click)=\"squareClick()\"\n>\n  <app-chess-figure\n    *ngIf=\"figure\"\n    [figure]=\"figure\"\n    [attr.draggable]=\"playerColor === figure.color ? 'draggable' : null\"\n    (mousedown)=\"chooseFigure()\"\n    (mouseup)=\"unchooseFigure()\"\n    (dragover)=\"changeTargetSquare()\"\n  ></app-chess-figure>\n  <div\n    *ngIf=\"smallNumber !== ''\"\n    class=\"chess-field-square-x\"\n  >\n    {{ smallNumber }}\n  </div>\n  <div\n    *ngIf=\"smallLetter !== ''\"\n    class=\"chess-field-square-y\"\n  >\n    {{ smallLetter }}\n  </div>\n\n  <div\n    *ngIf=\"isPossibleMove\"\n    class=\"figure-can-be-moved-here\"\n  ></div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CoordinatesMap, Figure, FigureMovement } from 'src/app/classes/chess-figures/Figure';\nimport {\n  PawnFigure,\n  KingFigure,\n} from 'src/app/classes/chess-figures';\nimport { Square, SquareCoordinates } from '../../classes/Square';\nimport { ChessField } from '../../classes/ChessField';\nimport RoomInfo from 'src/app/classes/RoomInfo';\nimport { WebsocketDecorator } from 'src/app/injectables/websocket';\nimport UserInfo from 'src/app/classes/UserInfo';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-chess-field',\n  templateUrl: './chess-field.component.html',\n  styleUrls: ['./chess-field.component.sass']\n})\nexport class ChessFieldComponent implements OnInit {\n\n  @Input() notation = [];\n  @Input() room!: RoomInfo;\n\n  @Output() figureCaptured = new EventEmitter<Figure>();\n\n  chessField: ChessField = new ChessField();\n  currentSquareTarget: Square | null = null;\n  dragTimer: boolean = false;\n  promotionInfo: null | { square: Square, figure: Figure } = null;\n  promotePopup: boolean =  false;\n\n  private _currentSquareInfo: Square | null = null;\n  get currentSquareInfo(): Square | null {\n    return this._currentSquareInfo;\n  }\n  set currentSquareInfo(value: Square | null) {\n    this._currentSquareInfo?.figure?.emit('onUnselect', { square: this._currentSquareInfo });\n    this._currentSquareInfo = value;\n    value?.figure?.emit('onSelect', { square: value });\n\n    this.showValidMoves(value);\n  }\n\n  get squares(): Square[] {\n    return this.chessField.squares;\n  }\n\n  get fieldLetters(): string[] {\n    return this.chessField.fieldLetters;\n  }\n\n  get clientPlayer(): UserInfo | undefined {\n    if (!this.socket.userInfo) return;\n    const { id } = this.socket.userInfo\n    return this.room?.players.find(player => player.id === id);\n  }\n\n  get playerColor(): Figure['color'] {\n    return this.clientPlayer?.color || 'white';\n  }\n\n  get gameNotation(): string[] {\n    return this.room.gameNotation || [];\n  }\n\n  get currentTurn(): Figure['color'] {\n    return this.gameNotation.length % 2 === 0 ? 'white' : 'black';\n  }\n\n  constructor(private socket: WebsocketDecorator) { }\n\n  convertNotationStringToArray(inputNotation: string): string[] {\n    const enPassantNotation = 'e.p.';\n    const notation = inputNotation\n      .replace(/\\s\\s/g, ' ')\n      .replace(/[!?]/g, '')\n      .replace(/0-0/g, 'O-O')\n      .replace(/0-0-0/g, 'O-O-O');\n      console.log(notation.slice(-20));\n    const parts = notation.split(/\\s\\d{1,2}\\.\\s/);\n    const result: string[] = [];\n    parts[0] = parts[0].slice(3);\n    parts.forEach(part => {\n      const moves = part.split(/\\s/);\n      moves.forEach(move => {\n        if (move === enPassantNotation) {\n          result[result.length - 1] = result[result.length - 1] + ' ' + enPassantNotation;\n          return;\n        }\n        result.push(move);\n      });\n    });\n    return result;\n  }\n\n  useNotation() {\n    // transform notation into squares.\n    this.gameNotation.forEach((move, index) => {\n      const info = this.transformMoveNotation(move, index % 2 === 0 ? 'white' : 'black');\n      this.automaticMove(info);\n    });\n  }\n\n  transformMoveNotation(originalMove: string, color: Figure['color']): {\n    targetSquare: Square,\n    startingSquare: Square,\n    promotionInfo: string,\n  } {\n    console.log(originalMove);\n    if (originalMove.length === 0) {\n      throw new Error('Could not parse game notation - one of the moves is empty!');\n    }\n    // e1     - move pawn to e1\n    // Be1    - move Bishop to e1\n    // Rdf3   - move Rook at d file to f3\n    // R1a3   - move Rook at 1'st row to a3\n    // Qh4e1  - move Queen at h4 to e1\n    // exd5   - take with pawn to d5\n    // Bxe5   - take with Bishop to e5\n    // Rdxf3  - take with Rook at d file to f3\n    // R1xa3  - take with Rook on 1-st row to a3\n    // Qh4xe1 - take with Queen on h4 to e1\n    // O-O    - castle king side\n    // O-O-O  - castle queen side\n    // e8=Q   - pawn move to e8 and promotes to Queen\n    // e7+    - move pawn to e7 which checks the King\n    // exd6 e.p. - pawn's en passant.\n    // Common parts:\n    // 1) Last two symbols are target square always, except for castle move and promotion;\n    // 2) First symbol is always the name of a figure, except for castle move, promotion and pawn move;\n    // 3) If move is a capture, it has \"x\" simbol in it, after which come target square.\n    if (originalMove === 'O-O' || originalMove === 'O-O-O') {\n      const startingSquare = this.chessField\n        .findSquare(square => square.figure?.name === 'King' && square.figure.color === color);\n      if (!startingSquare) throw new Error('Could not make castle move - King was not found!');\n      if (!startingSquare.figure?.didNotMove) throw new Error('Could not make castle move - King already did move!');\n      const yCoord = color === 'white' ? 1 : this.chessField.height;\n      const xCoord = originalMove === 'O-O' ? 'g' : 'c' ;\n      this.handleKingSelection(startingSquare, startingSquare.figure);\n      const isValidMove = startingSquare.figure.moveIsPossible(xCoord, yCoord);\n      if (!isValidMove) {\n        console.error(JSON.stringify(startingSquare.figure.possibleMoves));\n        throw new Error('Could not make a castle move - this move is not valid!');\n      }\n      const targetSquare = this.chessField.findSquareByCoordinates(xCoord, yCoord);\n      if (!targetSquare) throw new Error('Could not make a castle move - target square could not be found!');\n      return {\n        startingSquare,\n        targetSquare: targetSquare,\n        promotionInfo: '',\n      };\n    }\n    const captureSymbol = 'x';\n    const promotionSymbol = '=';\n    const checkSymbol = '+';\n    const checkMateSymbol = '#';\n    const enPassantNotation = ' e.p.';\n    const isCapture = originalMove.match(captureSymbol);\n    const isPromotion = originalMove.match(promotionSymbol);\n    const isCheck = originalMove[originalMove.length - 1] === checkSymbol;\n    const isCheckMate = originalMove[originalMove.length - 1] === checkMateSymbol;\n    const isEnPassant = originalMove.match(enPassantNotation);\n    let promotionInfo = '';\n    let move = originalMove;\n    if (isCapture) move = move.split(captureSymbol).join('');\n    if (isCheck || isCheckMate) move = move.slice(0, -1);\n    if (isEnPassant) move = move.slice(0, -5);\n    if (isPromotion) {\n      const parts = move.split(promotionSymbol);\n      promotionInfo = parts[parts.length - 1];\n      move = move.replace(`=${ promotionInfo }`, '');\n    }\n\n    const figureName = move[0].toUpperCase() === move[0] ? move[0] : '';\n    const targetSquareInfo = move.slice(-2);\n    const startingSquareInfo = move.slice(figureName ? 1 : 0, -2);\n    let startX = '';\n    let startY = 0;\n    const targetX = targetSquareInfo[0];\n    const targetY = Number(targetSquareInfo[1]);\n\n    if (startingSquareInfo.length === 1) {\n      const isNumber = !isNaN(Number(startingSquareInfo))\n      startX = isNumber ? '' : startingSquareInfo;\n      startY = isNumber ? Number(startingSquareInfo) : 0;\n    } else if (startingSquareInfo.length === 2) {\n      startX = startingSquareInfo[0];\n      startY = Number(startingSquareInfo[1]);\n    }\n\n    let startingSquare: Square | undefined;\n    const targetSquare = this.chessField\n      .findSquareByCoordinates(targetX, targetY);\n\n    if (startX && !isNaN(startY) && startY) {\n      startingSquare = this.chessField\n        .findSquareByCoordinates(startX, startY);\n    } else {\n      const noNeedToMatch = !startX && (!startY || isNaN(startY));\n      startingSquare = this.chessField.findSquare(square => {\n        const xMatches = startX && square.coordinates.xLetter === startX;\n        const yMatches = !isNaN(startY) && startY && square.coordinates.y === startY;\n        return (xMatches || yMatches || noNeedToMatch)\n          && square.figure?.nameLetter === figureName\n          && square.figure.color === color\n          && square.figure.moveIsPossible(targetX, targetY);\n      });\n      if (originalMove === 'axb5') {\n        console.log(startingSquare, startX, startingSquareInfo, move);\n      }\n    }\n    if (!startingSquare || !targetSquare) {\n      console.error('start: ', startingSquare, 'target: ', targetSquare);\n      console.error(\n        'startX:', startX,\n        '\\nstartY:', startY,\n        '\\ntargetX:', targetX,\n        '\\ntargetY:', targetY,\n        '\\nfigureName:',figureName,\n        '\\ncolor:', color,\n      );\n      throw new Error(`Could not make a move: either target or starting square could not be determined!`);\n    }\n    return {\n      startingSquare,\n      targetSquare,\n      promotionInfo: isPromotion ? promotionInfo : '',\n    };\n  }\n\n  automaticMove(info: {\n    startingSquare: Square,\n    targetSquare: Square,\n    promotionInfo: string,\n  }) {\n    const { startingSquare, targetSquare, promotionInfo } = info;\n    const capturedFigure = targetSquare.figure;\n    targetSquare.figure = startingSquare.figure;\n    startingSquare.figure = null;\n    if (targetSquare.figure instanceof Figure) {\n      targetSquare.figure.emit('onMove', {\n        startCoordinates: startingSquare.coordinates,\n        endCoordinates: targetSquare.coordinates,\n        startSquare: startingSquare,\n        endSquare: targetSquare,\n        automatic: true,\n        promotionInfo: promotionInfo,\n      });\n      this.chessField.emit('onMove', {\n        startCoordinates: startingSquare.coordinates,\n        endCoordinates: targetSquare.coordinates,\n        startSquare: startingSquare,\n        endSquare: targetSquare,\n        figure: targetSquare.figure,\n        automatic: true,\n        promotionInfo: promotionInfo,\n      });\n      targetSquare.figure.didNotMove = false;\n    }\n    if (capturedFigure) {\n      this.figureCaptured.emit(capturedFigure);\n    }\n    this.markPossibleMovesForAllFigures();\n  }\n\n  generateField() {\n    const figures = this.chessField.generate(this.playerColor);\n    this.addEventsToFigures(figures);\n    this.markPossibleMovesForAllFigures();\n    this.chessField.on('onMove', info => {\n      if (!info.automatic) this.markPossibleMovesForAllFigures();\n    });\n  }\n\n  addEventsToFigures(eventFigures: Figure[]) {\n    eventFigures.forEach(figure => {\n      if (figure.name === 'Pawn') {\n        figure.on('onMove', (info) => {\n          if (typeof info !== 'object' || !info) return;\n          const { startCoordinates, endCoordinates, endSquare, automatic, promotionInfo } = info;\n          if (\n            startCoordinates instanceof SquareCoordinates\n            && endCoordinates instanceof SquareCoordinates\n            && endSquare instanceof Square\n          ) {\n            this.handlePawnMove({\n              startCoordinates,\n              endCoordinates,\n              endSquare,\n              figure,\n              automatic,\n              promotionInfo,\n            });\n          }\n        });\n      }\n\n      if (figure.name === 'King') {\n        const selectHandler = (info: any) => {\n          if (typeof info !== 'object' || !info) return;\n          const { square } = info;\n          if (square instanceof Square) this.handleKingSelection(square, figure);\n        };\n        const unselectHandler = (info: any) => {\n          if (figure instanceof KingFigure && !Array.isArray(figure.movement)) {\n            figure.movement.right = 1;\n            figure.movement.left = 1;\n          }\n        }\n        figure.on('onSelect', selectHandler);\n        figure.on('onUnselect', unselectHandler);\n\n        figure.once('onMove', (info) => {\n          if (!Array.isArray(figure.movement)) {\n            figure.movement.left = 1;\n            figure.movement.right = 1;\n            figure.off('onSelect', selectHandler);\n            figure.off('onUnselect', unselectHandler);\n          }\n\n          if (typeof info !== 'object' || !info) return;\n          const { startCoordinates, endCoordinates, startSquare } = info;\n          if (\n            startCoordinates instanceof SquareCoordinates\n            && endCoordinates instanceof SquareCoordinates\n            && startSquare instanceof Square\n          ) {\n            this.handleFirstKingMove({\n              startCoordinates,\n              endCoordinates,\n              figure,\n              startSquare,\n            });\n          }\n        });\n      }\n    });\n  }\n\n  setCurrentSquareInfo(square: Square | null) {\n    if (!square?.figure) {\n      this.clearPossibleMoves();\n      return;\n    }\n    this.currentSquareInfo = square;\n    setTimeout(() => this.dragTimer = true, 500);\n  }\n\n  dragPieceMove(square: Square | null) {\n    if (this.dragTimer) this.tryMovingAPiece(square, this.currentSquareTarget);\n  }\n\n  changeTargetSquare(square: Square | null) {\n    this.currentSquareTarget = square;\n  }\n\n  squaresAreTheSame(square1: Square, square2: Square,): boolean {\n    return square1.coordinates.x === square2.coordinates.x\n      && square1.coordinates.y === square2.coordinates.y;\n  }\n\n  showValidMoves(square: Square | null) {\n    this.clearPossibleMoves();\n    if (!square?.figure) return;\n\n    const { figure } = square;\n    this.chessField.squares.forEach(currentSquare => {\n      const { x, y } = currentSquare.coordinates;\n      if (!figure.getPossibleMove(x, y)) return;\n      if (!figure.isCoward) {\n        currentSquare.isPossibleMove = true;\n        return;\n      }\n      const capturerSquare = this.chessField.findSquare(checkedSquare => {\n        const { figure: currentFigure } = checkedSquare;\n        if (!currentFigure || currentFigure.color === figure.color) return false;\n        const { possibleMoves } = currentFigure;\n        return possibleMoves[x] ? possibleMoves[x][y] !== undefined : false;\n      });\n      if (!capturerSquare) currentSquare.isPossibleMove = true;\n    });\n  }\n\n  moveCurrentFigure(targetSquare: Square | null) {\n    if (\n      !targetSquare || !this.currentSquareInfo\n      || this.squaresAreTheSame(targetSquare, this.currentSquareInfo)\n    ) return;\n    const { figure } = this.currentSquareInfo;\n    this.currentSquareInfo.figure = null;\n    targetSquare.figure = figure;\n\n    if (figure instanceof Figure) {\n      figure.emit('onMove', {\n        startCoordinates: this.currentSquareInfo.coordinates,\n        endCoordinates: targetSquare.coordinates,\n        startSquare: this.currentSquareInfo,\n        endSquare: targetSquare,\n      });\n      this.chessField.emit('onMove', {\n        startCoordinates: this.currentSquareInfo.coordinates,\n        endCoordinates: targetSquare.coordinates,\n        startSquare: this.currentSquareInfo,\n        endSquare: targetSquare,\n        figure: figure,\n      });\n      figure.didNotMove = false;\n    }\n\n    this.currentSquareInfo = null;\n    this.currentSquareTarget = null;\n    this.clearPossibleMoves();\n  }\n\n  captureFigure(targetSquare: Square | null) {\n    if (!this.currentSquareInfo?.figure || !targetSquare?.figure) return;\n    const { figure } = this.currentSquareInfo;\n    const capturedFigure = targetSquare.figure\n    this.figureCaptured.emit(capturedFigure);\n    targetSquare.figure = figure;\n    if (figure instanceof Figure) {\n      const figureInfo = {\n        startCoordinates: this.currentSquareInfo.coordinates,\n        endCoordinates: targetSquare.coordinates,\n        startSquare: this.currentSquareInfo,\n        endSquare: targetSquare,\n      };\n      figure.emit('onMove', figureInfo);\n      figure.emit('onCapture', { ...figureInfo, capturedFigure })\n      this.chessField.emit('onMove', { ...figureInfo, figure: figure });\n      this.chessField.emit('onCapture', { ...figureInfo, figure: figure, capturedFigure });\n      figure.didNotMove = false;\n    }\n    this.currentSquareInfo.figure = null;\n    this.currentSquareTarget = null;\n  }\n\n  clearPossibleMoves() {\n    this.squares.forEach(square => square.isPossibleMove = false);\n  }\n\n  markPossibleMovesForAllFigures() {\n    for (let square of this.chessField.squares) {\n      if (square.figure) {\n        this.markPossibleMoves({ square, figure: square.figure });\n      }\n    }\n  }\n\n  markPossibleMoves(info: {\n    square: Square,\n    figure: Figure,\n    currentMove?: number,\n    captureMovement?: FigureMovement,\n    ignoreDirection?: 'vertical' | 'horizontal' | 'diagonal-topLeft'\n      | 'diagonal-topRight',\n  }) {\n    const { ignoreDirection, currentMove, figure, captureMovement, square } = info;\n    if (!currentMove && !captureMovement) {\n      this.clearPossibleMoves();\n      figure.clearPossibleMoves();\n    }\n    const currentMovement = captureMovement\n      || figure.getCurrentMovement(currentMove || 0);\n    if (!currentMovement) return;\n\n    const coordinatesMaps: { [key: string]: CoordinatesMap } = {};\n\n    // Get coordinates of all squares that a figure could move to, if there were not\n    // obstacles. Do not check a direction if it's not a first move, that a figure could\n    // make in one turn (like knight) and figure has mustChangeDirection flag on.\n    if (ignoreDirection !== 'horizontal') {\n      coordinatesMaps.horizontal = this.markPossibleHorizontalMoves(info);\n    }\n    if (ignoreDirection !== 'vertical') {\n      coordinatesMaps.vertical = this.markPossibleVerticalMoves(info);\n    }\n    if (ignoreDirection !== 'diagonal-topLeft') {\n      coordinatesMaps.diagonalTopLeft = this.markPossibleDiagonalTopLeftMoves(info);\n    }\n    if (ignoreDirection !== 'diagonal-topRight') {\n      coordinatesMaps.diagonalTopRight = this.markPossibleDiagonalTopRightMoves(info);\n    }\n\n    // Then find all valid squares using coordinatesMap. Split them in arrays:\n    // left, right, top, bottom, topLeft, topRight, bottomLeft, bottomRight squares.\n    // Also capture squares for captureMovement.\n    const {\n      horizontal, vertical, diagonalTopLeft, diagonalTopRight, captures\n    } = coordinatesMaps;\n    const leftSquares: Square[] = [];\n    const rightSquares: Square[] = [];\n    const bottomSquares: Square[] = [];\n    const topSquares: Square[] = [];\n    const topLeftSquares: Square[] = [];\n    const bottomRightSquares: Square[] = [];\n    const topRightSquares: Square[] = [];\n    const bottomLeftSquares: Square[] = [];\n    \n    for (let currentSquare of this.squares) {\n      const { x, y } = currentSquare.coordinates;\n      \n      if (horizontal && horizontal[x] && horizontal[x][y] === 'left') {\n        leftSquares.push(currentSquare);\n      }\n      if (horizontal && horizontal[x] && horizontal[x][y] === 'right') {\n        rightSquares.push(currentSquare);\n      }\n      if (vertical && vertical[x] && vertical[x][y] === 'bottom') {\n        bottomSquares.push(currentSquare);\n      }\n      if (vertical && vertical[x] && vertical[x][y] === 'top') {\n        topSquares.push(currentSquare);\n      }\n      if (diagonalTopLeft && diagonalTopLeft[x] && diagonalTopLeft[x][y] === 'topLeft') {\n        topLeftSquares.push(currentSquare);\n      }\n      if (diagonalTopLeft && diagonalTopLeft[x] && diagonalTopLeft[x][y] === 'bottomRight') {\n        bottomRightSquares.push(currentSquare);\n      }\n      if (diagonalTopRight && diagonalTopRight[x] && diagonalTopRight[x][y] === 'topRight') {\n        topRightSquares.push(currentSquare);\n      }\n      if (diagonalTopRight && diagonalTopRight[x] && diagonalTopRight[x][y] === 'bottomLeft') {\n        bottomLeftSquares.push(currentSquare);\n      }\n    }\n\n    // Sort the arrays so they can be traversed from closest square to the farthest.\n    const ASC = (axis: 'x' | 'y') => (\n      (square1: Square, square2: Square,): number => {\n        if (square1.coordinates[axis] === square2.coordinates[axis]) return 0;\n        return square1.coordinates[axis] > square2.coordinates[axis] ? 1 : -1;\n      });\n\n    const DESC = (axis: 'x' | 'y') => (\n      (square1: Square, square2: Square,): number => {\n        if (square1.coordinates[axis] === square2.coordinates[axis]) return 0;\n        return square1.coordinates[axis] > square2.coordinates[axis] ? -1 : 1;\n      });\n\n    leftSquares.sort(DESC('x'));\n    rightSquares.sort(ASC('x'));\n    bottomSquares.sort(DESC('y'));\n    topSquares.sort(ASC('y'));\n    topLeftSquares.sort(DESC('x'));\n    bottomRightSquares.sort(ASC('x'));\n    topRightSquares.sort(ASC('x'));\n    bottomLeftSquares.sort(DESC('x'));\n\n    // Finally mark squares, using rules, decribed in method.\n    const markArguments = {\n      figure,\n      currentMove: currentMove || 0,\n      captureMovement,\n    };\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: leftSquares,\n      distance: currentMovement.left,\n      direction: 'left',\n      ignoreDirection: 'horizontal',\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: rightSquares,\n      distance: currentMovement.right,\n      direction: 'right',\n      ignoreDirection: 'horizontal',\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: bottomSquares,\n      distance: currentMovement.bottom,\n      direction: 'bottom',\n      ignoreDirection: 'vertical',\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: topSquares,\n      distance: currentMovement.top,\n      direction: 'top',\n      ignoreDirection: 'vertical',\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: topLeftSquares,\n      distance: currentMovement.topLeft,\n      direction: 'topLeft',\n      ignoreDirection: 'diagonal-topLeft',\n      square,\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: bottomRightSquares,\n      distance: currentMovement.bottomRight,\n      direction: 'bottomRight',\n      ignoreDirection: 'diagonal-topLeft',\n      square,\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: topRightSquares,\n      distance: currentMovement.topRight,\n      direction: 'topRight',\n      ignoreDirection: 'diagonal-topRight',\n      square,\n    });\n\n    this.saveFigurePossibleMoves({\n      ...markArguments,\n      squareList: bottomLeftSquares,\n      distance: currentMovement.bottomLeft,\n      direction: 'bottomLeft',\n      ignoreDirection: 'diagonal-topRight',\n      square,\n    });\n\n    // In case of figures, that moves in one way and captures in another way (like pawns),\n    // we call this function again, telling her, that it's a capture movement.\n    if (!captureMovement && !currentMove && figure.captureMovement) {\n      this.markPossibleMoves({ ...info, captureMovement: figure.captureMovement });\n    }\n  }\n\n  markPossibleHorizontalMoves(info: {\n    square: Square,\n    figure: Figure,\n    currentMove?: number,\n    captureMovement?: FigureMovement,\n  }): CoordinatesMap {\n    const { square, figure, currentMove = 0 } = info;\n    const coordinatesMap: CoordinatesMap = {};\n    const { coordinates: { x: startX, y: startY } } = square;\n    const currentMovement = info.captureMovement || (Array.isArray(figure.movement)\n      ? figure.movement[currentMove]\n      : figure.movement);\n\n    if (!currentMovement) return {};\n    const { left, right } = currentMovement;\n    if (!left && !right) return {};\n\n    // Save coordinates of all squares on the left...\n    if (left) {\n      let periodStart = left === Infinity ? 1 : startX - left;\n      if (periodStart < 1) periodStart = 1;\n      for (let i = periodStart; i < startX; i++) {\n        if (!coordinatesMap[i]) coordinatesMap[i] = {};\n        coordinatesMap[i][startY] = 'left';\n      }\n    }\n\n    // ...then do the same for the squares on the right.\n    if (right) {\n      let periodEnd = right === Infinity ? this.chessField.width : startX + right;\n      if (periodEnd > this.chessField.width) {\n        periodEnd = this.chessField.width;\n      }\n      for (let i = startX + 1; i <= periodEnd; i++) {\n        if (!coordinatesMap[i]) coordinatesMap[i] = {};\n        coordinatesMap[i][startY] = 'right';\n      }\n    }\n\n    return coordinatesMap;\n  }\n\n  markPossibleVerticalMoves(info: {\n    square: Square,\n    figure: Figure,\n    currentMove?: number,\n    captureMovement?: FigureMovement,\n  }): CoordinatesMap {\n    const { square, figure, currentMove = 0 } = info;\n    const coordinatesMap: CoordinatesMap = {};\n    const { coordinates: { x: startX, y: startY } } = square;\n    const currentMovement = info.captureMovement || (Array.isArray(figure.movement)\n      ? figure.movement[currentMove]\n      : figure.movement);\n\n    if (!currentMovement) return {};\n    const { top, bottom } = currentMovement;\n    if (!top && !bottom) return {};\n\n    coordinatesMap[startX] = {};\n    // Save coordinates of all squares on the bottom...\n    if (bottom) {\n      let endPosition = bottom === Infinity ? 1 : startY - bottom;\n      if (endPosition < 1) endPosition = 1;\n      for (let i = startY - 1; i >= endPosition; i--) {\n        coordinatesMap[startX][i] = 'bottom';\n      }\n    }\n\n    // ...then do the same for the squares on the top.\n    if (top) {\n      let endPosition = top === Infinity ? 8 : startY + top;\n      if (endPosition > 8) endPosition = 8;\n      for (let i = startY + 1; i <= endPosition; i++) {\n        coordinatesMap[startX][i] = 'top';\n      }\n    }\n\n    return coordinatesMap;\n  }\n\n  markPossibleDiagonalTopLeftMoves(info: {\n    square: Square,\n    figure: Figure,\n    currentMove?: number,\n    captureMovement?: FigureMovement,\n  }): CoordinatesMap {\n    const { square, figure, currentMove = 0 } = info;\n    const coordinatesMap: CoordinatesMap = {};\n    const { coordinates: { x: startX, y: startY } } = square;\n    const currentMovement = info.captureMovement || (Array.isArray(figure.movement)\n      ? figure.movement[currentMove]\n      : figure.movement);\n\n    if (!currentMovement) return {};\n    const { topLeft, bottomRight } = currentMovement;\n    if (!topLeft && !bottomRight) return {};\n\n    // Save coordinates of all squares on the top left...\n    if (topLeft) {\n      let endX = topLeft === Infinity ? 1 : startX - topLeft;\n      let endY = topLeft === Infinity ? this.chessField.width : startY + topLeft;\n      if (endY > this.chessField.width) endY = this.chessField.width;\n      if (endX < 1) endX = 1;\n\n      let currentX = startX - 1;\n      let currentY = startY + 1;\n      while (currentX >= endX && currentY <= endY) {\n        if (!coordinatesMap[currentX]) coordinatesMap[currentX] = {}\n        coordinatesMap[currentX][currentY] = 'topLeft';\n        currentX--;\n        currentY++;\n      }\n    }\n\n    // ...then do the same for the squares on the bottom right.\n    if (bottomRight) {\n      let endX = bottomRight === Infinity ? this.chessField.width : startX + bottomRight;\n      let endY = bottomRight === Infinity ? 1 : startY - bottomRight;\n      if (endY < 1) endY = 1;\n      if (endX > this.chessField.width) endX = this.chessField.width;\n\n      let currentX = startX + 1;\n      let currentY = startY - 1;\n      while (currentX <= endX && currentY >= endY) {\n        if (!coordinatesMap[currentX]) coordinatesMap[currentX] = {}\n        coordinatesMap[currentX][currentY] = 'bottomRight';\n        currentX++;\n        currentY--;\n      }\n    }\n\n    return coordinatesMap;\n  }\n\n  markPossibleDiagonalTopRightMoves(info: {\n    square: Square,\n    figure: Figure,\n    currentMove?: number,\n    captureMovement?: FigureMovement,\n  }): CoordinatesMap {\n    const { square, figure, currentMove = 0 } = info;\n    const coordinatesMap: CoordinatesMap = {};\n    const { coordinates: { x: startX, y: startY } } = square;\n    const currentMovement = info.captureMovement || (Array.isArray(figure.movement)\n      ? figure.movement[currentMove]\n      : figure.movement);\n\n    if (!currentMovement) return {};\n    const { topRight, bottomLeft } = currentMovement;\n    if (!topRight && !bottomLeft) return {};\n\n    // Save coordinates of all squares on the top right...\n    if (topRight) {\n      let endX = topRight === Infinity ? this.chessField.width : startX + topRight;\n      let endY = topRight === Infinity ? this.chessField.height : startY + topRight;\n      if (endY > this.chessField.height) endY = this.chessField.height;\n      if (endX > this.chessField.width) endX = this.chessField.width;\n\n      let currentX = startX + 1;\n      let currentY = startY + 1;\n      while (currentX <= endX && currentY <= endY) {\n        if (!coordinatesMap[currentX]) coordinatesMap[currentX] = {}\n        coordinatesMap[currentX][currentY] = 'topRight';\n        currentX++;\n        currentY++;\n      }\n    }\n\n    // ...then do the same for the squares on the bottom left.\n    if (bottomLeft) {\n      let endX = bottomLeft === Infinity ? 1 : startX - bottomLeft;\n      let endY = bottomLeft === Infinity ? 1 : startY - bottomLeft;\n      if (endY < 1) endY = 1;\n      if (endX < 1) endX = 1;\n\n      let currentX = startX - 1;\n      let currentY = startY - 1;\n      while (currentX >= endX && currentY >= endY) {\n        if (!coordinatesMap[currentX]) coordinatesMap[currentX] = {}\n        coordinatesMap[currentX][currentY] = 'bottomLeft';\n        currentX--;\n        currentY--;\n      }\n    }\n\n    return coordinatesMap;\n  }\n\n  saveFigurePossibleMoves(info: {\n    squareList: Square[],\n    figure: Figure,\n    distance: number,\n    direction: string,\n    currentMove: number,\n    ignoreDirection: Parameters<ChessFieldComponent[\"markPossibleMoves\"]>[0]['ignoreDirection'],\n    captureMovement?: FigureMovement,\n    square?: Square,\n  }) {\n    // If distance is 0, then something really went wrong.\n    if (info.distance === 0) return;\n    // 1) If you may only move a figure to the max movement distance, you may only mark\n    // the last square.\n    // 2) If figure cannot ignore collision, stop movement immediately when current square\n    // in the loop is occupied.\n    // 3) Only mark an occupied square if figure in that square is not the same color.\n    // 4) If figure can move multiple times per turn, mark next moves separately, using\n    // the same set of rules.\n    const {\n      squareList, figure, distance, currentMove, ignoreDirection, direction,\n    } = info;\n    const {\n      noStop, numberOfMoves, ignoreCollision, mustChangeDirection,\n    } = figure;\n    let couldNotPass = false;\n    let lastSquare: Square | null = null;\n    const currentMovement = info.captureMovement || figure.getCurrentMovement(currentMove);\n    if (!currentMovement || (noStop && squareList.length !== distance)) return;\n\n    const validSquares: Square[] = []; \n\n    if (squareList.length === distance || distance === Infinity) {\n      for (let i = 0; i < squareList.length; i++) {\n        const currentSquare = squareList[i];\n        const figureCanStop = !noStop\n          || (numberOfMoves - 1 === currentMove && i === squareList.length - 1);\n        const canMoveIntoSquare = !currentSquare.figure || currentMovement.canCapture;\n        const squareHasNoFigureOfSameColor = currentSquare.figure?.color !== figure.color;\n        const squareHasFigureOfDifferentColor = currentSquare.figure\n          && currentSquare.figure.color !== figure.color;\n        \n        if (\n          (!info.captureMovement && figureCanStop && canMoveIntoSquare\n          && squareHasNoFigureOfSameColor)\n          || (info.captureMovement && squareHasFigureOfDifferentColor)\n        ) {\n          validSquares.push(currentSquare);\n        } else if (\n          info.captureMovement && figure instanceof PawnFigure\n          && figure.canCapturePawnInFront && info.square\n        ) {\n          const side = figure.canCapturePawnInFront\n          const { x, y } = info.square.coordinates;\n          const { x: currentX, y: currentY } = currentSquare.coordinates;\n          const isWhite = figure.color === 'white';\n          const takeOnLeft = side === 'left' && currentX === x - 1;\n          const takeOnRight = side === 'right' && currentX === x + 1;\n          const takeOnTop = currentY === y + 1;\n          const takeOnBottom = currentY === y - 1;\n          if (\n            (isWhite && (takeOnLeft || takeOnRight) && takeOnTop)\n            || (!isWhite && (takeOnLeft || takeOnRight) && takeOnBottom)\n          ) validSquares.push(currentSquare);\n        }\n\n        if (!ignoreCollision && currentSquare.figure) {\n          couldNotPass = noStop && i !== squareList.length - 1;\n          lastSquare = currentSquare;\n          break;\n        }\n      }\n    }\n\n    validSquares.forEach(validSquare => {\n      const { x, y } = validSquare.coordinates;\n      figure.setPossibleMove(x, y, direction);\n    });\n\n    if (!info.captureMovement && !couldNotPass && numberOfMoves - 1 !== currentMove) {\n      const startingSquare = lastSquare || squareList.pop();\n      if (startingSquare) this.markPossibleMoves({\n        square: startingSquare,\n        figure,\n        currentMove: currentMove + 1,\n        ignoreDirection: mustChangeDirection ? ignoreDirection : undefined,\n      });\n    }\n  }\n  handlePawnMove(info: {\n    startCoordinates: SquareCoordinates,\n    endCoordinates: SquareCoordinates,\n    endSquare: Square,\n    figure: Figure,\n    automatic?: boolean,\n    promotionInfo?: string,\n  }) {\n    const { figure, automatic, promotionInfo } = info;\n    if (figure.didNotMove) return this.handleFirstPawnMove(info);\n    const { x: startX } = info.startCoordinates;\n    const { x: endX, y: endY } = info.endCoordinates;\n    if (startX !== endX && figure instanceof PawnFigure && figure.canCapturePawnInFront) {\n      this.resolveEnpassant(info);\n    }\n    if (\n      (figure.color === 'black' && endY === 1)\n      || (figure.color === 'white' && endY === this.chessField.height)\n    ) {\n      if (automatic && promotionInfo) {\n        const promotedFigure = (figure.color === 'white'\n          ? this.chessField.promoteVariantsWhite\n          : this.chessField.promoteVariantsBlack\n        ).find(variant => variant.nameLetter === promotionInfo);\n        if (!promotedFigure) return;\n        info.endSquare.figure = promotedFigure.clone(figure.color);\n        promotedFigure.didNotMove = false;\n        return;\n      }\n      this.openPromotePopup(figure, info.endSquare);\n    }\n  }\n  resolveEnpassant(info: {\n    startCoordinates: SquareCoordinates,\n    endCoordinates: SquareCoordinates,\n    endSquare: Square,\n    figure: Figure,\n  }) {\n    const { figure } = info;\n    if (!(figure instanceof PawnFigure)) return;\n    const { x: startX, y: startY } = info.startCoordinates;\n    const { x: endX } = info.endCoordinates;\n    if (\n      (startX < endX && figure.canCapturePawnInFront !== 'right')\n      || (startX > endX && figure.canCapturePawnInFront !== 'left')\n    ) return;\n\n    const square = this.chessField.findSquare(currentSquare => {\n      const { x, y } = currentSquare.coordinates;\n      return x === endX && y === startY;\n    });\n    if (!square?.figure) return;\n    this.figureCaptured.emit(square.figure);\n    square.figure = null;\n  }\n  handleFirstPawnMove(info: {\n    startCoordinates: SquareCoordinates,\n    endCoordinates: SquareCoordinates,\n    figure: Figure,\n  }) {\n    const { x: startX, y: startY } = info.startCoordinates;\n    const { x: endX, y: endY } = info.endCoordinates;\n    const { figure } = info;\n\n    // Set pawn movement to normal value. 0 / 2 = 0; 2 / 2 = 1;\n    if (!Array.isArray(figure.movement) && figure.didNotMove) {\n      figure.movement.top = figure.movement.top / 2;\n      figure.movement.bottom = figure.movement.bottom / 2;\n    }\n\n    // Do nothing, if it's a capture - pawns captures diagonaly, so X will not be equal.\n    // Enpassant is impossible if pawn has already moved this game.\n    if (startX !== endX || !figure.didNotMove) return;\n\n    if (\n      !(figure.color === 'black' && startY - endY === 2)\n      && !(figure.color === 'white' && endY - startY === 2)\n    ) return;\n\n    let leftSquare: Square | null = null;\n    let rightSquare: Square | null = null;\n\n\n    const squares = this.chessField.findSquares(currentSquare => {\n      const { x, y } = currentSquare.coordinates;\n      return y === endY && (x === startX + 1 || x === startX - 1);\n    });\n    for (let currentSquare of squares) {\n      const { x } = currentSquare.coordinates;\n      if (x === startX + 1) rightSquare = currentSquare;\n      if (x === startX - 1) leftSquare = currentSquare;\n    }\n\n    if (\n      leftSquare?.figure instanceof PawnFigure\n      && leftSquare?.figure?.color !== figure.color\n    ) {\n      leftSquare.figure.canCapturePawnInFront = 'right';\n    }\n    if (\n      rightSquare?.figure instanceof PawnFigure\n      && rightSquare?.figure?.color !== figure.color\n    ) {\n      rightSquare.figure.canCapturePawnInFront = 'left';\n    }\n\n    // Enpassant is only possible right after conditions for it are met. If opponent did\n    // not capitalize, he loses this opportunity.\n    // Prevent handler from firing once, because it will be fired immediately after \n    // figure onMove handlers and we need to wait for next one.\n    let sameTick = true;\n    const handler = () => {\n      if (sameTick) {\n        sameTick = false;\n        return;\n      }\n      if (leftSquare?.figure instanceof PawnFigure) {\n        leftSquare.figure.canCapturePawnInFront = false;\n      }\n      if (rightSquare?.figure instanceof PawnFigure) {\n        rightSquare.figure.canCapturePawnInFront = false;\n      }\n      this.chessField.off('onMove', handler);\n    }\n\n    this.chessField.on('onMove', handler);\n  }\n\n  handleFirstKingMove(info: {\n    startCoordinates: SquareCoordinates,\n    endCoordinates: SquareCoordinates,\n    startSquare: Square,\n    figure: Figure,\n  }) {\n    const { figure, startCoordinates, endCoordinates } = info;\n    if (!figure.didNotMove) return;\n    const { x: startX, y: startY } = startCoordinates;\n    const { x: endX, y: endY } = endCoordinates;\n\n    // if King mover vertically or just 1 square, it's not castle move.\n    if (endY !== startY || Math.abs(endX - startX) === 1) return;\n\n    const condition = endX > startX\n      ? (x: number) => startX < x\n      : (x: number) => startX > x;\n\n    const rookSquare = this.chessField.findSquare((currentSquare: Square) => {\n      const { x, y } = currentSquare.coordinates;\n      return y === startY && condition(x)\n        && currentSquare?.figure?.name === 'Rook'\n        && currentSquare.figure.color === figure.color;\n    });\n    if (!rookSquare?.figure?.didNotMove) return;\n\n    const rookTargetSquare = this.chessField.findSquare((currentSquare: Square) => {\n      const { x, y } = currentSquare.coordinates;\n      return y === startY\n        && x === endX + (rookSquare.coordinates.x > startX ? -1 : 1);\n    });\n    if (!rookTargetSquare) return;\n\n    const rook = rookSquare.figure;\n    rookSquare.figure = null;\n    rookTargetSquare.figure = rook;\n    rook.didNotMove = false;\n    figure.emit('onCastle', { isLong: rookSquare.coordinates.x < startX, figure });\n  }\n\n  handleKingSelection(square: Square, figure: Figure) {\n    // If king did move already, it can only move normally.\n    if (!figure.didNotMove) return;\n    const { y: figureY, x: figureX } = square.coordinates;\n    let leftRookSquare: Square | null = null;\n    let rightRookSquare: Square | null = null;\n    let hasFiguresLeft: boolean = false;\n    let hasFiguresRight: boolean = false;\n\n    // Search squares array for squares on the same row as the king, except the same\n    // square. Save squares in the corner as this is where the Rooks should be placed.\n    // If any square in between has a figure, set the flag for that direction to true.\n    for (let currentSquare of this.chessField.squares) {\n      const { x, y } = currentSquare.coordinates;\n      if (y !== figureY || x === figureX) continue;\n\n      if (x === 1) {\n        leftRookSquare = currentSquare;\n        continue;\n      }\n      if (x === this.chessField.width) {\n        rightRookSquare = currentSquare;\n        continue;\n      }\n      if (x < figureX && currentSquare.figure) hasFiguresLeft = true; \n      if (x > figureX && currentSquare.figure) hasFiguresRight = true;\n    }\n\n    // Castle is only available if there is not figures between King and a rook in that\n    // direction, and both the Rook and King did not move.\n    if (\n      !hasFiguresRight && rightRookSquare?.figure?.name === 'Rook'\n      && rightRookSquare.figure.color === figure.color \n      && rightRookSquare.figure.didNotMove\n    ) {\n      Array.isArray(figure.movement)\n        ? figure.movement[0].right = 2\n        : figure.movement.right = 2;\n    }\n\n    if (\n      !hasFiguresLeft && leftRookSquare?.figure?.name === 'Rook'\n      && leftRookSquare.figure.color === figure.color \n      && leftRookSquare.figure.didNotMove\n    ) {\n      Array.isArray(figure.movement)\n        ? figure.movement[0].left = 2\n        : figure.movement.left = 2;\n    }\n\n    this.markPossibleMoves({ square, figure });\n  }\n\n  openPromotePopup(figure: Figure, square: Square) {\n    if (!figure.canPromote) return;\n    this.promotionInfo = {\n      figure,\n      square,\n    };\n    this.promotePopup = true;\n  }\n\n  promoteFigure(chosenFigure: Figure) {\n    if (!this.promotionInfo) return;\n    const figure = chosenFigure.clone(this.playerColor);\n    this.promotionInfo.square.figure = figure;\n    figure.didNotMove = false;\n  }\n\n  tryMovingAPiece(square: Square | null, targetSquare: Square | null) {\n    if (!targetSquare || !square?.figure) return;\n    const { x: startX, y: startY } = square.coordinates;\n    const { x: endX, y: endY } = targetSquare.coordinates;\n    const xDifference = startX - endX;\n    const yDifference = startY - endY;\n    if (xDifference !== 0 && yDifference !== 0) {\n      // if (square.figure.)\n    }\n  }\n\n  ngOnInit(): void {\n    this.generateField();\n    const normalGame = `1. e4 e5 2. Nf3 Nc6 3. Bb5 a6\n    4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6 8. c3 O-O 9. h3 Nb8 10. d4 Nbd7\n    11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7 14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5\n    Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6 21. Nc4 Nxc4 22. Bxc4 Nb6\n    23. Ne5 Rae8 24. Bxf7+ Rxf7 25. Nxf7 Rxe1+ 26. Qxe1 Kxf7 27. Qe3 Qg5 28. Qxg5\n    hxg5 29. b3 Ke6 30. a3 Kd6 31. axb4 cxb4 32. Ra5 Nd5 33. f3 Bc8 34. Kf2 Bf5\n    35. Ra7 g6 36. Ra6+ Kc5 37. Ke1 Nf4 38. g3 Nxh3 39. Kd2 Kb5 40. Rd6 Kc5 41. Ra6\n    Nf2 42. g4 Bd3 43. Re6`;\n    const enPassantGame = `1. e4 e6\n    2. e5 d5\n    3. exd6 e.p.`;\n    const promotionGame = `1. d4 d5 2. c4 c6 3. Nc3 Nf6 4. Nf3 a6 5. e3 b5 6. c5 g6 7. Bd3 Bg4 8. h3 Bxf3 9. Qxf3 Bg7 10. g4 e5! 11. Qg3 Nfd7 12. Ne2 Qe7 13. 0-0 h5 14. f3 Nf8 15. a4 b4 16. Bd2 a5 17. e4 dxe4 18. Bxe4 Ne6 19. Rae1 h4 20. Qf2 0-0 21. f4 exd4 22. f5!? Nxc5 23. Bb1 d3 24. Nc1 Qd6 25. Ba2?? Bd4 26. Be3 Ne4 27. Qxh4 g5 28. Qh5 d2 29. f6 Qxf6 30. Bxd4 Qxd4+ 31. Kg2  dxe1=N+`;\n    this.room.gameNotation = this.convertNotationStringToArray(promotionGame);\n    if (Array.isArray(this.gameNotation) && this.gameNotation.length !== 0) {\n      this.useNotation();\n    }\n  }\n\n}\n","<div class=\"chess-field\">\n  <app-chess-field-square\n    *ngFor=\"let square of squares\"\n    [square]=\"square\"\n    [playerColor]=\"playerColor\"\n    [width]=\"chessField.width\"\n    [height]=\"chessField.height\"\n    (grabFigure)=\"setCurrentSquareInfo($event)\"\n    (dropFigure)=\"moveCurrentFigure($event)\"\n    (clearPossibleMoves)=\"clearPossibleMoves()\"\n    (targetSquareChange)=\"changeTargetSquare($event)\"\n    (captureFigure)=\"captureFigure($event)\"\n  ></app-chess-field-square>\n  <app-promote-popup\n    [(visible)]=\"promotePopup\"\n    [promotionInfo]=\"promotionInfo\"\n    [promoteVariants]=\"chessField.promoteVariants\"\n    [playerColor]=\"playerColor\"\n    [width]=\"chessField.width\"\n    (promoteVariantChosen)=\"promoteFigure($event)\"\n  ></app-promote-popup>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Figure } from 'src/app/classes/chess-figures/Figure';\n\n@Component({\n  selector: 'app-chess-figure',\n  templateUrl: './chess-figure.component.html',\n  styleUrls: ['./chess-figure.component.sass']\n})\nexport class ChessFigureComponent implements OnInit {\n  @Input() figure: Figure | null = null;\n\n  get name() {\n    return this.figure?.name || '';\n  }\n\n  get image() {\n    return this.figure?.image || '#';\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n  class=\"chess-field-square-figure\"\n>\n  <img [src]=\"image\" [alt]=\"name\">\n</div>\n","import { Component, Input } from '@angular/core';\nimport RoomInfo from 'src/app/classes/RoomInfo';\n\n@Component({\n  selector: 'app-room-item',\n  templateUrl: './room-item.component.html',\n  styleUrls: ['./room-item.component.sass']\n})\nexport class RoomItemComponent {\n\n  @Input() room!: RoomInfo\n  @Input() isCurrentRoom: boolean = false;\n  @Input() isChosenRoom: boolean = false;\n\n  get name(): string {\n    return this.room?.name || '';\n  }\n\n  get playerCount(): string {\n    return `${this.room?.players.length || 0}/2`;\n  }\n\n  get hasStarted(): string {\n    return this.room?.gameHasStarted ? 'Yes' : 'No';\n  }\n\n  constructor() { }\n\n\n}\n","<div\n  [class.is-chosen]=\"isChosenRoom\"\n  [class.is-current]=\"isCurrentRoom\"\n  class=\"room-item\"\n>\n  <div class=\"room-item-name\">{{ name }}</div>\n  <div class=\"room-item-player-count\">{{ playerCount }}</div>\n  <div class=\"room-item-has-started\">{{ hasStarted }}</div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport RoomInfo from 'src/app/classes/RoomInfo';\n\n@Component({\n  selector: 'app-room-list',\n  templateUrl: './room-list.component.html',\n  styleUrls: ['./room-list.component.sass']\n})\nexport class RoomListComponent {\n\n  @Input() list: RoomInfo[] = [];\n  @Input() chosenRoom: RoomInfo | null = null;\n  @Input() currentRoom: RoomInfo | null = null;\n\n  @Output() roomClick = new EventEmitter<RoomInfo>();\n\n  constructor() { }\n\n  emitRoomClick(room: RoomInfo) {\n    this.roomClick.emit(room);\n  }\n\n}\n","<div class=\"room-list\">\n  <app-room-item\n    *ngFor=\"let room of list\"\n    [room]=\"room\"\n    [isCurrentRoom]=\"room.id === currentRoom?.id\"\n    [isChosenRoom]=\"room.id === chosenRoom?.id\"\n    (click)=\"emitRoomClick(room)\"\n  ></app-room-item>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport UserInfo, { isUserInfo } from \"../classes/UserInfo\";\r\nimport { socket } from \"../websocket/connectWebsocket\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebsocketDecorator {\r\n  userInfo: UserInfo | null = null;\r\n  gameId: number = 0;\r\n\r\n  constructor() {}\r\n\r\n  loadUserInfo(): UserInfo | null {\r\n    if (this.userInfo) return this.userInfo;\r\n    const infoString = localStorage.getItem('ghost-chess-info');\r\n    if (!infoString) return null;\r\n    const info = JSON.parse(infoString);\r\n    if (!isUserInfo(info)) return null;\r\n    this.userInfo = info;\r\n    return info;\r\n  }\r\n\r\n  saveUserInfo(userInfo: UserInfo) {\r\n    localStorage.setItem('ghost-chess-info', JSON.stringify(userInfo));\r\n    this.userInfo = userInfo;\r\n  }\r\n\r\n  emit(event: string, data?: any) {\r\n    if (!socket) return;\r\n    const info: { [key: string]: any } = {\r\n      id: this.userInfo?.id,\r\n    };\r\n    if (this.gameId !== 0) {\r\n      info.gameId = this.gameId;\r\n    }\r\n    if (typeof data === 'object' && data) {\r\n      Object.keys(data).forEach(key => {\r\n        info[key] = data[key];\r\n      });\r\n    } else if (data) {\r\n      info.info = data;\r\n    }\r\n    socket.emit(event, info);\r\n  }\r\n\r\n  on(event: string, handler: (data: any) => void) {\r\n    if (!socket) return;\r\n    socket.on(event, handler);\r\n  }\r\n}","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-default-popup',\n  templateUrl: './default-popup.component.html',\n  styleUrls: ['./default-popup.component.sass']\n})\nexport class DefaultPopupComponent {\n\n  @Input() visible: boolean = false;\n  @Input() title: string = '';\n  @Input() message: string = '';\n  @Input() confirmText: string = 'Ok';\n  @Input() rejectText: string = 'Cancel';\n  @Input() showConfirmButton: boolean = true;\n  @Input() showRejectButton: boolean = true;\n\n  @Output() visibleChange = new EventEmitter<boolean>();\n  @Output() confirm = new EventEmitter();\n  @Output() reject = new EventEmitter();\n\n  confirmClick() {\n    this.confirm.emit();\n  }\n\n  rejectClick() {\n    this.reject.emit();\n  }\n\n  constructor() { }\n\n}\n","<div\n  class=\"default-popup\"\n  [class.is-open]=\"visible\"\n>\n  <div class=\"default-popup-title\">{{ title }}</div>\n  <div\n    class=\"default-popup-content\"\n    #content\n  >\n    <ng-content></ng-content>\n  </div>\n  <ng-container *ngIf=\"!content.hasChildNodes()\">\n    {{ message }}\n  </ng-container>\n  <div\n    class=\"default-popup-buttons\"\n    #buttons\n  >\n    <ng-content select=\"selector\"></ng-content>\n  </div>\n  <div class=\"default-popup-buttons-default\">\n    <ng-container *ngIf=\"!buttons.hasChildNodes()\">\n      <app-default-button\n        *ngIf=\"showConfirmButton\"\n        (click)=\"confirmClick()\"\n      >\n        {{ confirmText }}\n      </app-default-button>\n      <app-default-button\n        *ngIf=\"showConfirmButton\"\n        (click)=\"rejectClick()\"\n      >\n        {{ rejectText }}\n      </app-default-button>\n    </ng-container>\n  </div>\n</div>\n\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-host-room-popup',\n  templateUrl: './host-room-popup.component.html',\n  styleUrls: ['./host-room-popup.component.sass']\n})\nexport class HostRoomPopupComponent {\n\n  @Input() visible: boolean = false;\n\n  @Output() visibleChange = new EventEmitter<boolean>();\n  @Output() hostRoom = new EventEmitter<string>();\n\n  name: string = '';\n\n  confirm() {\n    this.hostRoom.emit(this.name);\n    this.close();\n  }\n\n  close() {\n    this.visibleChange.emit(false);\n    this.name = '';\n  }\n\n  constructor() { }\n\n}\n","<app-default-popup\n  [(visible)]=\"visible\"\n  title=\"Create room\"\n  (confirm)=\"confirm()\"\n  (reject)=\"close()\"\n>\n  <app-default-text-field\n    [(value)]=\"name\"\n  ></app-default-text-field>\n</app-default-popup>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-name-set-popup',\n  templateUrl: './name-set-popup.component.html',\n  styleUrls: ['./name-set-popup.component.sass']\n})\nexport class NameSetPopupComponent {\n\n  @Input() visible: boolean = false;\n  @Input() name: string = '';\n\n  @Output() visibleChange = new EventEmitter<boolean>();\n  @Output() setNewName = new EventEmitter<string>();\n\n  currentName: string = '';\n\n  constructor() { }\n\n  close() {\n    this.toggle(false);\n    this.currentName = '';\n  }\n\n  confirm() {\n    this.setNewName.emit(this.currentName);\n    this.close();\n  }\n\n  toggle(value: boolean) {\n    this.visible = value;\n    this.visibleChange.emit(this.visible);\n    if (value) this.currentName = this.name;\n  }\n\n}\n","<app-default-popup\n  [(visible)]=\"visible\"\n  title=\"Enter your name:\"\n  (confirm)=\"confirm()\"\n  (reject)=\"close()\"\n>\n  <app-default-text-field\n    [(value)]=\"currentName\"\n  ></app-default-text-field>\n</app-default-popup>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Figure } from 'src/app/classes/chess-figures/Figure';\nimport { Square } from '../../classes/Square';\n\n@Component({\n  selector: 'app-promote-popup',\n  templateUrl: './promote-popup.component.html',\n  styleUrls: ['./promote-popup.component.sass']\n})\nexport class PromotePopupComponent implements OnInit {\n  @Input() promoteVariants: Figure[] = [];\n  @Input() promotionInfo: { figure: Figure, square: Square } | null = null;\n  @Input() visible: boolean = false;\n  @Input() playerColor: 'white' | 'black' = 'white';\n  @Input() width: number = 8;\n\n  @Output() visibleChange = new EventEmitter<boolean>();\n  @Output() promoteVariantChosen = new EventEmitter<Figure>();\n\n  get left(): number {\n    if (!this.promotionInfo) return 0;\n    return this.playerColor === 'white'\n      ? (this.promotionInfo.square.coordinates.x - 1) * 80\n      : (this.width - this.promotionInfo.square.coordinates.x) * 80;\n  }\n\n  constructor() {}\n\n  close() {\n    this.toggle(false);\n  }\n\n  choosePromoteVariant(figure: Figure) {\n    this.promoteVariantChosen.emit(figure);\n    this.close();\n  }\n\n  toggle(value: boolean) {\n    this.visible = value;\n    this.visibleChange.emit(this.visible);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n  class=\"promote-popup\"\n  [class.is-open]=\"visible\"\n  [style.left.px]=\"left\"\n>\n  <app-chess-figure\n    *ngFor=\"let variant of promoteVariants\"\n    class=\"promote-variant\"\n    [figure]=\"variant\"\n    (click)=\"choosePromoteVariant(variant)\"\n  ></app-chess-figure>\n</div>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { connectSocket, socket } from 'src/app/websocket/connectWebsocket';\nimport { UserInfo, isUserInfo } from '../../classes/UserInfo';\nimport { isRoomInfo, RoomInfo } from '../../classes/RoomInfo';\nimport { WebsocketDecorator } from 'src/app/injectables/websocket';\nimport { Route } from '@angular/router';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass']\n})\nexport class GameComponent implements OnInit {\n\n  namePopup: boolean = false;\n  currentRoom: RoomInfo | null = null;\n\n  get gameHasStarted(): boolean {\n    return this.currentRoom?.gameHasStarted || false;\n  }\n\n  get userName() {\n    return this.socket.userInfo?.name || '';\n  }\n\n  constructor(private socket: WebsocketDecorator) { }\n\n  saveUserInfo(userInfo: UserInfo) {\n    if (!userInfo.name) {\n      this.namePopup = true;\n    }\n    this.socket.saveUserInfo(userInfo);\n  }\n\n  isClientSide(): boolean {\n    return typeof window !== 'undefined';\n  }\n\n  setNewName(name: string) {\n    if (!name) return;\n    this.socket.emit('setNewUserName', { name });\n    if (!this.socket.userInfo) return;\n    this.socket.userInfo.name = name;\n    this.saveUserInfo(this.socket.userInfo);\n  }\n\n  ngOnInit(): void {\n    if (this.isClientSide()) {\n      this.socket.loadUserInfo();\n      if (!socket) connectSocket();\n\n      this.socket.on('showError', error => {\n        console.error(error);\n      });\n\n      this.socket.on('saveUser', data => {\n        if (!isUserInfo(data)) return;\n        this.saveUserInfo(data);\n      });\n\n      this.socket.on('userIsConnected', () => {\n        this.socket.emit('checkForUserRoom');\n      });\n\n      this.socket.on('userRoomCheckResult', room => {\n        if (!isRoomInfo(room)) {\n          return;\n        }\n        this.currentRoom = room;\n      });\n\n      this.socket.emit('checkUser', this.socket.userInfo || undefined);\n    }\n  } \n\n}\n","<div class=\"game-route\">\n  <router-outlet></router-outlet>\n  <app-name-set-popup\n    [(visible)]=\"namePopup\"\n    [name]=\"userName\"\n    (setNewName)=\"setNewName($event)\"\n  ></app-name-set-popup>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport RoomInfo, { isRoomInfo } from 'src/app/classes/RoomInfo';\nimport { WebsocketDecorator } from 'src/app/injectables/websocket';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.sass']\n})\nexport class LobbyComponent implements OnInit {\n\n  roomList: RoomInfo[] = [];\n  hostRoomPopup: boolean = false;\n  targetRoom: RoomInfo | null = null;\n  currentRoom: RoomInfo | null = null;\n\n  get isInRoom(): boolean {\n    return !!this.currentRoom;\n  }\n\n  get roomIsFull(): boolean {\n    if (!this.currentRoom) return false;\n    const { players, maxPlayers } = this.currentRoom;\n    return players.length === maxPlayers;\n  }\n\n  get targetRoomIsFull(): boolean {\n    if (!this.targetRoom) return false;\n    const { players, maxPlayers } = this.targetRoom;\n    return players.length === maxPlayers;\n  }\n\n  get isHost(): boolean {\n    if (!this.currentRoom || !this.socket.userInfo) return false;\n    return this.currentRoom.hostId === this.socket.userInfo.id;\n  }\n\n  constructor(\n    private router: Router,\n    private socket: WebsocketDecorator,\n  ) { }\n\n  isClientSide(): boolean {\n    return typeof window !== 'undefined';\n  }\n\n  setTargetRoom(room?: RoomInfo) {\n    this.targetRoom = room || null;\n  }\n\n  hostRoom() {\n    this.hostRoomPopup = true;\n  }\n\n  createRoom(name: string) {\n    this.socket.emit('createRoom', { name });\n  }\n\n  joinRoom() {\n    if (!this.targetRoom) return;\n    this.socket.emit('joinRoom', { roomId: this.targetRoom.id });\n  }\n\n  leaveRoom() {\n    if (!this.currentRoom) return;\n    this.socket.emit('leaveRoom', { roomId: this.currentRoom.id });\n  }\n\n  startGame() {\n    if (!this.currentRoom) return;\n    this.socket.emit('startGame', { roomId: this.currentRoom.id });\n  }\n\n  setCurrentRoom(room: any) {\n    if (!isRoomInfo(room)) {\n      this.currentRoom = null;\n      this.socket.gameId = 0;\n      return;\n    }\n    this.currentRoom = room;\n    this.socket.gameId = room.id;\n    this.goToGameRoute();\n  }\n\n  goToGameRoute() {\n    if (!this.currentRoom?.gameHasStarted) return;\n    this.router.navigate(['game', this.currentRoom.id.toString()]);\n  }\n\n  ngOnInit(): void {\n    if (!this.isClientSide) return;\n\n    this.socket.on('userRoomCheckResult', room => {\n      this.setCurrentRoom(room);\n    });\n\n    this.socket.on('refreshRoomList', roomList => {\n      if (!Array.isArray(roomList)) return;\n      this.roomList = roomList.filter(room => isRoomInfo(room));\n      if (!this.currentRoom) return;\n      const currentRoom = this.roomList.find(room => room.id === this.currentRoom?.id);\n      if (currentRoom) this.setCurrentRoom(currentRoom);\n    });\n\n    this.socket.on('joinedRoom', room => {\n      this.setCurrentRoom(room);\n    });\n\n    this.socket.on('leftRoom', () => {\n      this.setCurrentRoom(null);\n    });\n\n    this.socket.on('updateCurrentGame', room => {\n      if (isRoomInfo(room)) this.setCurrentRoom(room);\n    });\n\n    this.socket.emit('getRoomList');\n    this.socket.emit('checkForUserRoom');\n  }\n\n}\n","<div class=\"game-lobby\">\n  <app-room-list\n    [list]=\"roomList\"\n    [chosenRoom]=\"targetRoom\"\n    [currentRoom]=\"currentRoom\"\n    (roomClick)=\"setTargetRoom($event)\"\n  ></app-room-list>\n  <div class=\"joined-room\">\n\n  </div>\n  <div class=\"game-lobby-controls\">\n    <app-default-button\n      [disabled]=\"isInRoom\"\n      (click)=\"hostRoom()\"\n    >\n      Host room\n    </app-default-button>\n    <app-default-button\n      [disabled]=\"isInRoom || targetRoomIsFull\"\n      (click)=\"joinRoom()\"\n    >\n      Join room\n    </app-default-button>\n    <app-default-button\n      *ngIf=\"isInRoom\"\n      (click)=\"leaveRoom()\"\n    >\n      Leave room\n    </app-default-button>\n    <app-default-button\n      *ngIf=\"isInRoom && isHost\"\n      [disabled]=\"!roomIsFull\"\n      (click)=\"startGame()\"\n    >\n      Start game\n    </app-default-button>\n  </div>\n  <app-host-room-popup\n    [(visible)]=\"hostRoomPopup\"\n    (hostRoom)=\"createRoom($event)\"\n  ></app-host-room-popup>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Figure } from 'src/app/classes/chess-figures/Figure';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport RoomInfo, { isRoomInfo } from 'src/app/classes/RoomInfo';\nimport { WebsocketDecorator } from 'src/app/injectables/websocket';\n\n@Component({\n  selector: 'app-started-game',\n  templateUrl: './started-game.component.html',\n  styleUrls: ['./started-game.component.sass']\n})\nexport class StartedGameComponent implements OnInit {\n\n  yourCapturedFigures: Figure[] = [];\n  opponentsCapturedFigures: Figure[] = [];\n  room!: RoomInfo;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private socket: WebsocketDecorator,\n  ) { }\n\n  isClientSide(): boolean {\n    return typeof window !== 'undefined';\n  }\n\n  figureCaptured(figure: Figure) {\n    this.yourCapturedFigures.push(figure);\n  }\n\n  ngOnInit(): void {\n    if (!this.isClientSide) return;\n    this.socket.on('roomSearchResult', room => {\n      if (!isRoomInfo(room)) {\n        this.socket.gameId = 0;\n        this.router.navigate(['game', 'lobby']);\n        return;\n      }\n      this.room = room;\n    });\n    \n    this.route.params.subscribe(params => {\n      const { id } = params;\n      this.socket.gameId = isNaN(id) ? 0 : +id;\n      if (!this.socket.gameId || this.socket.gameId < 0) {\n        this.router.navigate(['game', 'lobby']);\n        return;\n      }\n      this.socket.emit('getRoom');\n      // Write all communications between started game and websocket server.\n      // Make chess field convert game notation into board state. It should not parse\n      // notation if it's invalid.\n      // Make turns and timer logic.\n      // Buy a hosting and then configure nginx.\n      // Make everything slightly preetier.\n    });\n  }\n\n}\n","<div class=\"captured-figures opponents\">\n  <app-chess-figure\n    *ngFor=\"let figure of opponentsCapturedFigures\"\n    [figure]=\"figure\"\n  ></app-chess-figure>\n</div>\n<app-chess-field\n  *ngIf=\"room\"\n  [room]=\"room\"\n  (figureCaptured)=\"figureCaptured($event)\"\n></app-chess-field>\n<div class=\"captured-figures\">\n  <app-chess-figure\n    *ngFor=\"let figure of yourCapturedFigures\"\n    [figure]=\"figure\"\n  ></app-chess-figure>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wild-card',\n  templateUrl: './wild-card.component.html',\n  styleUrls: ['./wild-card.component.sass']\n})\nexport class WildCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>404 not found</p>\n","import { environment } from './../../environments/environment';\r\nimport { connectToWebsocket, SocketDecorator } from 'websocket-decorator';\r\n\r\nconst { websocketServerUrl } = environment;\r\n\r\nexport let socket: SocketDecorator | null = null;\r\n\r\nexport const connectSocket = () => {\r\n  socket = connectToWebsocket(websocketServerUrl);\r\n};\r\n\r\nexport default connectSocket;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  websocketServerUrl: 'ws://localhost:5000/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"names":[],"sourceRoot":"webpack:///"}